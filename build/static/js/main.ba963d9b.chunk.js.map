{"version":3,"sources":["components/clients/spinner.gif","components/clients/Spinner.js","helper/auth.js","reducers/notifyReducer.js","store.js","actions/types.js","reducers/settingsReducer.js","config.js","components/layout/AppNavbar.js","components/clients/Clients.js","components/layout/Sidebar.js","components/layout/Dashboard.js","components/clients/AddClient.js","components/clients/ClientsDetail.js","components/clients/EditClient.js","components/layout/Alert.js","components/auth/LogIn.js","actions/notifyAction.js","components/settings/Settings.js","actions/settingsAction.js","components/auth/Registration.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","src","spinner","alt","style","display","margin","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","LoadingScreen","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","initialState","message","messageType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rootReducer","combineReducers","firebaseReducer","firestore","firestoreReducer","notify","action","type","settings","disableBalanceOnAdd","payload","disableBalanceOnEdit","allowRegistration","localStorage","getItem","setItem","JSON","stringify","parse","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","AppNavbar","onLogOutClick","e","preventDefault","props","logout","this","className","to","data-toggle","data-target","undefined","uid","id","href","email","onClick","Component","compose","firebaseConnect","connect","Client","clients","reduce","total","man","parseFloat","balance","toFixed","scope","map","client","key","firstName","lastName","phone","Spinner","firestoreConnect","collection","ordered","Sidebar","Dashboard","Clients","AddClient","onChange","setState","target","name","value","onSubmit","newClient","add","history","push","htmlFor","required","disabled","ClientsDetail","displayUpdate","updateAmount","match","params","clientUpdate","update","doc","onDelete","delete","then","toggleDisplay","updateForm","placeholder","aria-hidden","data","console","log","EditClient","Alert","classNames","LogIn","password","notifyUser","login","catch","err","Settings","disableBalanceOnAddChange","setDisableBalanceOnAdd","disableBalanceOnEditChange","allowRegistrationChange","setAllowRegistration","checked","setDisableBalanceOnEdit","Registration","createUser","alert","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba963d9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.c89f6871.gif\";","import React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        alt=\"Loading....\"\r\n        style={{ display: \"block\", margin: \"auto\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\r\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\r\n// import createHistory from \"history/createBrowserHistory\";\r\nimport LoadingScreen from \"../components/clients/Spinner\"; // change it to your custom component\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n// const history = createHistory();\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsAuthenticated\",\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/login\",\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: false,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\r\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && auth.isEmpty\r\n});\r\n","import { NOTIFY_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  message: null,\r\n  messageType: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case NOTIFY_USER:\r\n      return {\r\n        ...state,\r\n        message: action.message,\r\n        messageType: action.messageType\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport notifyReducer from \"./reducers/notifyReducer\";\r\nimport settingsReducer from \"./reducers/settingsReducer\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBMs4iyLcn_Tb0Imq6MG5sJ_fYx2VAQ9yY\",\r\n  authDomain: \"react-fb-clientspanel.firebaseapp.com\",\r\n  databaseURL: \"https://react-fb-clientspanel.firebaseio.com\",\r\n  projectId: \"react-fb-clientspanel\",\r\n  storageBucket: \"react-fb-clientspanel.appspot.com\",\r\n  messagingSenderId: \"985309797763\",\r\n  appId: \"1:985309797763:web:41d78dc61aa9ed78cfaab6\",\r\n  measurementId: \"G-5KEH1KNJ5F\"\r\n};\r\n\r\n// react-redux-firebase config\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n//Initialize firestore\r\n// const firestore = firebase.firestore();\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  notify: notifyReducer,\r\n  settings: settingsReducer\r\n});\r\n//Check for setting in local storage\r\nif (localStorage.getItem(\"settings\") == null) {\r\n  //Default setting\r\n  const defaultSettings = {\r\n    disableBalanceOnAdd: false,\r\n    disableBalanceOnEdit: false,\r\n    allowRegistration: true\r\n  };\r\n  //set to local storage\r\n  localStorage.setItem(\"settings\", JSON.stringify(defaultSettings));\r\n}\r\n\r\n//Create Initial state\r\nconst initialState = { settings: JSON.parse(localStorage.getItem(\"settings\")) };\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;\r\n","export const NOTIFY_USER = \"NOTIFY_USER\";\r\nexport const DISABLE_BALANCE_ON_ADD = \"DISABLE_BALANCE_ON_ADD\";\r\nexport const DISABLE_BALANCE_ON_EDIT = \"DISABLE_BALANCE_ON_EDIT\";\r\nexport const ALLOW_REGISTRATION = \"ALLOW_REGISTRTION\";\r\n","import {\r\n  DISABLE_BALANCE_ON_ADD,\r\n  DISABLE_BALANCE_ON_EDIT,\r\n  ALLOW_REGISTRATION\r\n} from \"../actions/types\";\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case DISABLE_BALANCE_ON_ADD:\r\n      return {\r\n        ...state,\r\n        disableBalanceOnAdd: action.payload\r\n      };\r\n    case DISABLE_BALANCE_ON_EDIT:\r\n      return {\r\n        ...state,\r\n        disableBalanceOnEdit: action.payload\r\n      };\r\n    case ALLOW_REGISTRATION:\r\n      return {\r\n        ...state,\r\n        allowRegistration: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import firebase from \"firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport store from \"./store\";\r\n\r\nconst rrfConfig = {\r\n  userProfile: \"users\",\r\n  useFirestoreForProfile: true\r\n};\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance // <- needed if using firestore\r\n};\r\n\r\nexport default rrfProps;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\n\r\nclass AppNavbar extends Component {\r\n  onLogOutClick = e => {\r\n    e.preventDefault();\r\n    const { firebase } = this.props;\r\n\r\n    firebase.logout();\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-md navbar-dark bg-secondary mb-4\">\r\n        <div className=\"conatiner\">\r\n          <ul className=\"nav\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"navbar-brand \">\r\n                ClientPanel\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className=\"navbar-toggler\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarMain\"\r\n                type=\"button\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n            </li>\r\n\r\n            {auth.uid !== undefined ? (\r\n              <div className=\"collapse navbar-collapse \" id=\"navbarMain\">\r\n                <ul className=\"navbar-nav mr-auto float-right\">\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                      Dashboard\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <Link to=\"/settings\" className=\"nav-link\">\r\n                      Settings\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a href=\"#!\" className=\"nav-link\">\r\n                      {auth.email}\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"#!\"\r\n                      className=\"nav-link\"\r\n                      onClick={this.onLogOutClick}\r\n                    >\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const auth = state.firebase.auth;\r\n  const { settings } = state.settings;\r\n  return {\r\n    auth: auth,\r\n    settings: settings\r\n  };\r\n};\r\n\r\nexport default compose(firebaseConnect(), connect(mapStateToProps))(AppNavbar);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass Client extends Component {\r\n  render() {\r\n    const { clients } = this.props;\r\n    const totalOwed = (total, man) => total + parseFloat(man.balance);\r\n\r\n    if (clients) {\r\n      return (\r\n        <div>\r\n          <div className=\"row\">\r\n            <h4 className=\"mx-auto\">\r\n              Total Owed: {clients.reduce(totalOwed, 0).toFixed(2)}\r\n            </h4>\r\n\r\n            <table className=\"table table-bordered mt-10\">\r\n              <thead className=\"thead-light\">\r\n                <tr>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Phone</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Balance</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {clients.map(client => (\r\n                  <tr key={client.id}>\r\n                    <td>\r\n                      {client.firstName} {client.lastName}\r\n                    </td>\r\n                    <td>{client.phone}</td>\r\n                    <td>{client.email}</td>\r\n                    <td>${parseFloat(client.balance).toFixed(2)}</td>\r\n                    <td>\r\n                      <Link\r\n                        to={`/client/${client.id}`}\r\n                        className=\"btn btn-info btn-md\"\r\n                      >\r\n                        <i className=\"fas fa-arrow-circle-right\">Details</i>\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const clients = state.firestore.ordered.clients;\r\n  return {\r\n    clients: clients\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  firestoreConnect([{ collection: \"clients\" }]),\r\n  connect(mapStateToProps)\r\n)(Client);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <Link to=\"/client/add\" className=\"btn btn-dark btn-md ml-4\">\r\n        <i className=\"fas fa-plus\"></i>Add\r\n      </Link>\r\n    );\r\n  }\r\n}\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport Clients from \"../clients/Clients\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-10\">\r\n          <Clients />\r\n        </div>\r\n        <div className=\"col-md-2\">\r\n          <Sidebar />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Dashboard;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { compose } from \"redux\";\r\n// import { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nclass AddClient extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    balance: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newClient = this.state;\r\n    const { firestore } = this.props;\r\n\r\n    if (newClient.balance === \"\") {\r\n      newClient.balance = 0;\r\n    }\r\n    firestore.add({ collection: \"clients\" }, newClient);\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { disableBalanceOnAdd } = JSON.parse(\r\n      localStorage.getItem(\"settings\")\r\n    );\r\n    return (\r\n      <div>\r\n        <Link to=\"/\">\r\n          <i className=\"fas fa-arrow-circle-left\"></i>Back to Dashboard\r\n        </Link>\r\n        <h1 className=\"mx-auto mt-10 mb-10\">Add Client</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={this.onChange}\r\n              name=\"firstName\"\r\n              value={this.state.firstName}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={this.onChange}\r\n              name=\"lastName\"\r\n              value={this.state.lastName}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={this.onChange}\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"balance\">Balance</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={this.onChange}\r\n              name=\"balance\"\r\n              disabled={disableBalanceOnAdd ? \"disabled\" : null}\r\n              value={this.state.balance}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"phone\">Phone</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control form-control-sm\"\r\n              onChange={this.onChange}\r\n              name=\"phone\"\r\n              value={this.state.phone}\r\n              required\r\n            />\r\n          </div>\r\n          <input\r\n            className=\"btn btn-primary\"\r\n            type=\"submit\"\r\n            value=\"Submit\"\r\n          ></input>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default firestoreConnect()(AddClient);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass ClientsDetail extends Component {\r\n  state = {\r\n    displayUpdate: false,\r\n    updateAmount: \"\"\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const id = this.props.match.params.id;\r\n    const newBalance = this.state.updateAmount;\r\n    const { firestore } = this.props;\r\n    const clientUpdate = {\r\n      balance: newBalance\r\n    };\r\n    firestore.update({ collection: \"clients\", doc: id }, clientUpdate);\r\n    this.setState({ displayUpdate: false });\r\n  };\r\n\r\n  onDelete = () => {\r\n    const id = this.props.match.params.id;\r\n    const { firestore, history } = this.props;\r\n    firestore\r\n      .delete({ collection: \"clients\", doc: id })\r\n      .then(history.push(\"/\"));\r\n  };\r\n\r\n  toggleDisplay = () => {\r\n    this.setState({ displayUpdate: true });\r\n  };\r\n\r\n  render() {\r\n    const { client } = this.props;\r\n    const id = this.props.match.params.id;\r\n    const { displayUpdate, updateAmount } = this.state;\r\n    var updateForm = \"\";\r\n    const { disableBalanceOnEdit } = JSON.parse(\r\n      localStorage.getItem(\"settings\")\r\n    );\r\n    if (displayUpdate) {\r\n      updateForm = (\r\n        <form onSubmit={this.onSubmit} className=\"my-4\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"text\"\r\n            name=\"updateAmount\"\r\n            disabled={disableBalanceOnEdit ? \"disabled\" : null}\r\n            value={updateAmount}\r\n            placeholder={client.balance}\r\n            onChange={this.onChange}\r\n          />\r\n          <button className=\"btn btn-sm btn-primary my-2\" type=\"submit\">\r\n            update\r\n          </button>\r\n        </form>\r\n      );\r\n    } else {\r\n      updateForm = null;\r\n    }\r\n    if (client) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-10\">\r\n              <Link to=\"/\">\r\n                <i className=\"fas fa-arrow-circle-left\">Back to Dashboard</i>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <Link\r\n                to={`/client/edit/${id}`}\r\n                className=\"btn btn-md btn-outline-secondary mr-1\"\r\n              >\r\n                Edit\r\n              </Link>\r\n              <Link\r\n                to=\"/\"\r\n                className=\"btn btn-md btn-outline-danger\"\r\n                onClick={this.onDelete}\r\n              >\r\n                Delete\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"row my-4\">\r\n            <table className=\"table table-bordered\">\r\n              <thead className=\"thead-dark\">\r\n                <tr>\r\n                  <th scope=\"col\">Client Id</th>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Phone</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Balance</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{id}</td>\r\n                  <td>\r\n                    {client.firstName} {client.lastName}\r\n                  </td>\r\n                  <td>{client.phone}</td>\r\n                  <td>{client.email}</td>\r\n                  <td>\r\n                    <strong>{parseFloat(client.balance).toFixed(2)}</strong>\r\n                    <button onClick={this.toggleDisplay} className=\"mx-4\">\r\n                      <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                    {updateForm}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const clients = state.firestore.data.clients;\r\n  const id = ownProps.match.params.id;\r\n  const client = clients ? clients[id] : null;\r\n  console.log(clients);\r\n  return {\r\n    client: client\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"clients\" }])\r\n)(ClientsDetail);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nclass EditClient extends Component {\r\n  state = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    balance: \"\",\r\n    phone: \"\"\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const id = this.props.match.params.id;\r\n    const { firstName, lastName, email, balance, phone } = this.state;\r\n    const { firestore, history } = this.props;\r\n    const clientUpdate = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      balance,\r\n      phone\r\n    };\r\n    firestore\r\n      .update({ collection: \"clients\", doc: id }, clientUpdate)\r\n      .then(history.push(\"/\"));\r\n  };\r\n  render() {\r\n    const { client } = this.props;\r\n    const { disableBalanceOnEdit } = JSON.parse(\r\n      localStorage.getItem(\"settings\")\r\n    );\r\n    if (client) {\r\n      return (\r\n        <div>\r\n          <Link to=\"/\">\r\n            <i className=\"fas fa-arrow-circle-left\"></i>Back to Dashboard\r\n          </Link>\r\n          <h1 className=\"mx-auto mt-10 mb-10\">UpdateClient</h1>\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-sm\"\r\n                onChange={this.onChange}\r\n                name=\"firstName\"\r\n                placeholder={client.firstName}\r\n                value={this.state.firstName}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-sm\"\r\n                onChange={this.onChange}\r\n                name=\"lastName\"\r\n                placeholder={client.lastName}\r\n                value={this.state.lastName}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-sm\"\r\n                onChange={this.onChange}\r\n                name=\"email\"\r\n                placeholder={client.email}\r\n                value={this.state.email}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"balance\">Balance</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-sm\"\r\n                onChange={this.onChange}\r\n                disabled={disableBalanceOnEdit ? \"disabled\" : null}\r\n                name=\"balance\"\r\n                placeholder={client.balance}\r\n                value={this.state.balance}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Phone</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control form-control-sm\"\r\n                onChange={this.onChange}\r\n                name=\"phone\"\r\n                placeholder={client.phone}\r\n                value={this.state.phone}\r\n                required\r\n              />\r\n            </div>\r\n            <input\r\n              className=\"btn btn-primary\"\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n            ></input>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <Spinner />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const clients = state.firestore.data.clients;\r\n  const id = ownProps.match.params.id;\r\n  const client = clients ? clients[id] : null;\r\n  console.log(clients);\r\n  return {\r\n    client: client\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"clients\" }])\r\n)(EditClient);\r\n","import React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Alert = props => {\r\n  const { message, messageType } = props;\r\n  return (\r\n    <div\r\n      className={classNames(\"alert\", {\r\n        \"alert-success\": messageType === \"success\",\r\n        \"alert-danger\": messageType === \"error\"\r\n      })}\r\n    >\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { notifyUser } from \"../../actions/notifyAction\";\r\nimport Alert from \"../layout/Alert\";\r\n\r\nclass LogIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const { firebase, notifyUser } = this.props;\r\n\r\n    firebase\r\n      .login({\r\n        email,\r\n        password\r\n      })\r\n      .catch(err => notifyUser(\"Invalid credentials given!!\", \"error\"));\r\n  };\r\n  render() {\r\n    const { message, messageType } = this.props.notify;\r\n    const { disableBalanceOnAdd } = JSON.parse(\r\n      localStorage.getItem(\"settings\")\r\n    );\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 mx-auto\">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                {message ? (\r\n                  <Alert message={message} messageType={messageType} />\r\n                ) : null}\r\n                <h1 className=\"text-center pb-4 pt-4\">\r\n                  <span className=\"text-primary\">\r\n                    <i className=\"fa fa-lock\" /> Login\r\n                  </span>\r\n                </h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"Email\">Email</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.onChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      name=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.onChange}\r\n                      required\r\n                    />\r\n                  </div>\r\n\r\n                  <input\r\n                    className=\"btn btn-primary btn-block\"\r\n                    type=\"submit\"\r\n                    value=\"Login\"\r\n                  />\r\n                </form>\r\n                {disableBalanceOnAdd ? (\r\n                  <Link to=\"/registration\">Register Now!</Link>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateTOProps = state => {\r\n  const { notify } = state;\r\n  return { notify };\r\n};\r\n\r\nexport default compose(\r\n  firebaseConnect(),\r\n  connect(mapStateTOProps, { notifyUser })\r\n)(LogIn);\r\n","import { NOTIFY_USER } from \"./types\";\r\n\r\nexport const notifyUser = (message, messageType) => {\r\n  return {\r\n    type: NOTIFY_USER,\r\n    message,\r\n    messageType\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setDisableBalanceOnAdd,\r\n  setDisableBalanceOnEdit,\r\n  setAllowRegistration\r\n} from \"../../actions/settingsAction\";\r\n\r\nclass Settings extends Component {\r\n  disableBalanceOnAddChange = () => {\r\n    const { setDisableBalanceOnAdd } = this.props;\r\n    setDisableBalanceOnAdd();\r\n  };\r\n  disableBalanceOnEditChange = () => {\r\n    const { setDisableBalanceOnAdd } = this.props;\r\n    setDisableBalanceOnAdd();\r\n  };\r\n  allowRegistrationChange = () => {\r\n    const { setAllowRegistration } = this.props;\r\n    setAllowRegistration();\r\n  };\r\n  render() {\r\n    const {\r\n      disableBalanceOnAdd,\r\n      disableBalanceOnEdit,\r\n      allowRegistration\r\n    } = JSON.parse(localStorage.getItem(\"settings\"));\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <Link to=\"/\" className=\"btn btn-link\">\r\n              <i className=\"fa fa-arrow-circle-left\" aria-hidden=\"true\" />\r\n              Back to Dashboard\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <span>Edit Settings</span>\r\n            <form>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  checked={allowRegistration ? \"checked\" : null}\r\n                  id=\"allowRegistration\"\r\n                  name=\"allowRegistration\"\r\n                  onChange={this.allowRegistrationChange}\r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"allowRegistration\">\r\n                  Allow Registration\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  checked={disableBalanceOnAdd ? \"checked\" : null}\r\n                  id=\"disableBalanceOnAdd\"\r\n                  name=\"disableBalanceOnAdd\"\r\n                  onChange={this.disableBalanceOnAddChange}\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor=\"disableBalanceOnAdd\"\r\n                >\r\n                  Disable Balance On Add{\" \"}\r\n                </label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  className=\"form-check-input\"\r\n                  id=\"disableBalanceOnEdit\"\r\n                  type=\"checkbox\"\r\n                  checked={disableBalanceOnEdit ? \"checked\" : null}\r\n                  name=\"disableBalanceOnEdit\"\r\n                  onChange={this.disableBalanceOnEditChange}\r\n                />\r\n                <label\r\n                  className=\"form-check-label\"\r\n                  htmlFor=\"disableBalanceOnEdit\"\r\n                >\r\n                  Disable Balance On Edit{\" \"}\r\n                </label>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { auth } = state.firebase.auth;\r\n  const { settings } = state.settings;\r\n  return {\r\n    auth: auth,\r\n    settings: settings\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setDisableBalanceOnAdd,\r\n  setDisableBalanceOnEdit,\r\n  setAllowRegistration\r\n})(Settings);\r\n","import {\r\n  DISABLE_BALANCE_ON_ADD,\r\n  DISABLE_BALANCE_ON_EDIT,\r\n  ALLOW_REGISTRATION\r\n} from \"./types\";\r\n\r\nexport const setDisableBalanceOnAdd = () => {\r\n  //Get settings from local storage\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n\r\n  //Toggle\r\n  settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd;\r\n\r\n  //set back to local Storage\r\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n  return {\r\n    type: DISABLE_BALANCE_ON_ADD,\r\n    payload: settings.disableBalanceOnAdd\r\n  };\r\n};\r\n\r\nexport const setDisableBalanceOnEdit = () => {\r\n  //Get settings from local storage\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n\r\n  //Toggle\r\n  settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit;\r\n\r\n  //set back to local Storage\r\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n  return {\r\n    type: DISABLE_BALANCE_ON_EDIT,\r\n    payload: settings.disableBalanceOnEdit\r\n  };\r\n};\r\n\r\nexport const setAllowRegistration = () => {\r\n  //Get settings from local storage\r\n  const settings = JSON.parse(localStorage.getItem(\"settings\"));\r\n\r\n  //Toggle\r\n  settings.allowRegistration = !settings.allowRegistration;\r\n\r\n  //set back to local Storage\r\n  localStorage.setItem(\"settings\", JSON.stringify(settings));\r\n  return {\r\n    type: ALLOW_REGISTRATION,\r\n    payload: settings.allowRegistration\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import { compose } from \"redux\";\r\n// import { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\n\r\nclass Registration extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { email, password } = this.state;\r\n    const { firebase } = this.props;\r\n\r\n    firebase\r\n      .createUser({ email, password })\r\n      .catch(err => alert(\"user already exist\"));\r\n  };\r\n  render() {\r\n    const { allowRegistration } = JSON.parse(localStorage.getItem(\"settings\"));\r\n    if (allowRegistration) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mx-auto\">\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  <h1 className=\"text-center pb-4 pt-4\">\r\n                    <span className=\"text-primary\">\r\n                      <i className=\"fa fa-lock\" /> Registration\r\n                    </span>\r\n                  </h1>\r\n                  <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"Email\">Email</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label htmlFor=\"password\">password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <input\r\n                      className=\"btn btn-primary btn-block\"\r\n                      type=\"submit\"\r\n                      value=\"Register\"\r\n                    />\r\n                  </form>\r\n                  <Link to=\"/login\">Go to Login page</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1 className=\"text-danger text-center\">\r\n            YOU ARE NOT ALLOWED TO REGISTER!!\r\n          </h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default firebaseConnect()(Registration);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from \"./helper/auth\";\n\nimport { Provider } from \"react-redux\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport rrfProps from \"./config\";\nimport store from \"./store\";\nimport AppNavbar from \"./components/layout/AppNavbar\";\nimport Dashboard from \"./components/layout/Dashboard\";\nimport AddClient from \"./components/clients/AddClient\";\nimport ClientsDetail from \"./components/clients/ClientsDetail\";\nimport EditClient from \"./components/clients/EditClient\";\nimport LogIn from \"./components/auth/LogIn\";\nimport Settings from \"./components/settings/Settings\";\nimport Registration from \"./components/auth/Registration\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n          <Router>\n            <div className=\"App\">\n              <AppNavbar />\n              <div className=\"container\">\n                <Switch>\n                  <Route\n                    exact\n                    path=\"/\"\n                    component={UserIsAuthenticated(Dashboard)}\n                  />\n                  <Route\n                    exact\n                    path=\"/client/add\"\n                    component={UserIsAuthenticated(AddClient)}\n                  />\n                  <Route\n                    exact\n                    path=\"/client/:id\"\n                    component={UserIsAuthenticated(ClientsDetail)}\n                  />\n                  <Route\n                    exact\n                    path=\"/client/edit/:id\"\n                    component={UserIsAuthenticated(EditClient)}\n                  />\n                  <Route\n                    exact\n                    path=\"/login\"\n                    component={UserIsNotAuthenticated(LogIn)}\n                  />\n                  <Route\n                    exact\n                    path=\"/registration\"\n                    component={UserIsNotAuthenticated(Registration)}\n                  />\n                  <Route\n                    exact\n                    path=\"/settings\"\n                    component={UserIsAuthenticated(Settings)}\n                  />\n                </Switch>\n              </div>\n            </div>\n          </Router>\n        </ReactReduxFirebaseProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}